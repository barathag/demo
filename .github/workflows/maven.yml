name: Java CI with Maven

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  java:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: maven
    - name: Build with Maven
      run: mvn -B package --file pom.xml
    - name: Archive Artifact
      uses: actions/upload-artifact@v2
      with:
        name: barathag-artifact
        path: target/          
 
  sonar:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Set up JDK 17
      uses: actions/setup-java@v2
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: maven
    - name: Build with Maven cloud
      run:  mvn -B verify sonar:sonar -Dsonar.projectKey=barathag_demo -Dsonar.organization=barathag -Dsonar.host.url=https://sonarcloud.io -Dsonar.login=$SONARCLOUD_TOKEN
      env:
        GIT_HUB_TOKEN: ${{ secrets.GIT_HUB_TOKEN }}
        SONARCLOUD_TOKEN: ${{ secrets.SONAR_TOKEN }}
       
  docker:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Log in to GitHub Container Registry
      uses: docker/login-action@v2
      with:
        registry: ghcr.io
        username: ${{ github.repository_owner }}
        password: ${{ secrets.TOKEN_GITHUB }}
    - name: Build and Push Docker Image to GitHub Container Registry
      uses: docker/build-push-action@v2
      with:
       context: .
       file: Dockerfile
       push: true
       tags: ghcr.io/${{ github.repository_owner }}/${{ env.REPOSITORY_NAME }}barathagcontainer
      env:
        DOCKER_BUILDKIT: 1
# Add a new step to push the image to Docker Hub
    - name: Log in to Docker Hub
      uses: docker/login-action@v2
      with:
       username: ${{ secrets.DOCKERHUB_USERNAME }}
       password: ${{ secrets.DOCKERHUB_PASSWORD }}
    - name: Tag and Push Docker Image to Docker Hub
      run: |
        docker image tag ghcr.io/${{ github.repository_owner }}/${{ env.REPOSITORY_NAME }}barathagcontainer ${{ github.repository_owner }}/barathagcontainer:v1
        docker image push ${{ github.repository_owner }}/barathagcontainer:v1
    
  kubernetes:
    runs-on: ubuntu-latest
    needs: docker
    steps: 
      - name: Deploy to Kubernetes
        uses: kubectl/kubectl@v1.28.2
        with:
          command: apply -f deployment.yaml
        env:
          KUBECONFIG: ${{ secrets.KUBECONFIG }}
